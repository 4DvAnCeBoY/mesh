<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>mesh-demo-java</artifactId>
	<packaging>jar</packaging>
	<name>Mesh - Examples - Java Demo</name>

	<parent>
		<groupId>com.gentics.mesh</groupId>
		<artifactId>mesh-examples</artifactId>
		<version>1.0.3-dev-SNAPSHOT</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<dockerHost>cetus.office</dockerHost>
		<dockerHostProtocol>http</dockerHostProtocol>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.gentics.mesh</groupId>
			<artifactId>mesh-server</artifactId>
			<version>${project.version}</version>
			<classifier>combined</classifier>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>${mesh.database.provider}</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>net.lingala.zip4j</groupId>
			<artifactId>zip4j</artifactId>
			<version>1.3.2</version>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>com.gentics.mesh</groupId>
			<artifactId>mesh-core</artifactId>
			<version>${project.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.3.2</version>
				<executions>
					<execution>
						<id>github-demo-clone</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>generate-resources</phase>
						<configuration>
							<executable>git</executable>
							<arguments>
								<argument>clone</argument>
								<argument>-b</argument>
								<argument>master</argument>
								<argument>git@github.com:gentics/mesh-angular-demo.git</argument>
								<argument>target/mesh-angular-demo</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>dist-demo-package</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<attach>false</attach>
							<appendAssemblyId>false</appendAssemblyId>
							<descriptors>
								<descriptor>src/main/assembly/demo-zip.xml</descriptor>
							</descriptors>
							<outputDirectory>${project.basedir}/src/main/resources</outputDirectory>
							<finalName>mesh-demo</finalName>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jolokia</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<configuration>
					<dockerHost>${dockerHostProtocol}://${dockerHost}:2375</dockerHost>
					<registry>https://registry.gentics.com</registry>
					<images>
						<image>
							<name>registry.gentics.com/mesh-demo:${project.version}</name>
							<alias>mesh-demo</alias>

							<build>
								<assembly>
									<mode>dir</mode>
									<basedir>/opt/mesh</basedir>
									<dockerFileDir>mesh-demo</dockerFileDir>
									<descriptor>docker-assembly.xml</descriptor>
								</assembly>
							</build>
							<run>
								<ports>
									<port>mesh.port:8080</port>
								</ports>
								<wait>
									<url>http://${dockerHost}:${mesh.port}/api/v1/admin/status</url>
									<log>.*Initalized project.*</log>
									<time>80000</time>
								</wait>
								<log>
									<color>cyan</color>
									<prefix>TC</prefix>
								</log>
							</run>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>docker-build</id>
						<phase>deploy</phase>
						<goals>
							<goal>build</goal>
							<goal>push</goal>
							<!-- <goal>remove</goal> -->
						</goals>
					</execution>
					<!-- <execution> <id>start</id> <phase>pre-integration-test</phase> <goals> <goal>build</goal> <goal>start</goal> </goals> </execution> <execution> <id>stop</id> <phase>post-integration-test</phase> 
						<goals> <goal>stop</goal> </goals> </execution> -->
				</executions>
			</plugin>
			<!-- <plugin> <groupId>com.lazerycode.jmeter</groupId> <artifactId>jmeter-maven-plugin</artifactId> <version>1.8.1</version> <executions> <execution> <phase>integration-test</phase> 
				<goals> <goal>jmeter</goal> </goals> </execution> </executions> <configuration> <propertiesUser> <webservice.host>${dockerHost}</webservice.host> <webservice.port>${mesh.port}</webservice.port> 
				</propertiesUser> </configuration> </plugin> <plugin> <artifactId>maven-failsafe-plugin</artifactId> <executions> <execution> <id>integration-test</id> <goals> <goal>integration-test</goal> 
				</goals> </execution> <execution> <id>verify</id> <goals> <goal>verify</goal> </goals> </execution> </executions> <configuration> <systemPropertyVariables> <mesh.url>http://${dockerHost}:${mesh.port}</mesh.url> 
				</systemPropertyVariables> </configuration> </plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>com.gentics.mesh.demo.DemoRunner</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<executions>
					<!-- Run shade goal on package phase -->
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<filters>
								<filter>
									<artifact>org.elasticsearch:elasticsearch</artifact>
									<excludes>
										<exclude>META-INF/services/org.apache.lucene.codecs.Codec</exclude>
										<exclude>META-INF/services/org.apache.lucene.codecs.DocValuesFormat</exclude>
										<exclude>META-INF/services/org.apache.lucene.codecs.PostingsFormat</exclude>
									</excludes>
								</filter>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>com.gentics.mesh.demo.DemoRunner</mainClass>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											exec-maven-plugin
										</artifactId>
										<versionRange>
											[1.3.2,)
										</versionRange>
										<goals>
											<goal>exec</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-assembly-plugin
										</artifactId>
										<versionRange>
											[2.2-beta-5,)
										</versionRange>
										<goals>
											<goal>single</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
