
= Administration Guide

== Software Stack

[options="header"]
|======
| Component                                                    | Type                 | Version
| http://orientdb.com/[OrientDB]                               | Graph Database       | 2.2.x
| https://github.com/Syncleus/Ferma[Ferma]                     | OGM                  | 2.2.x
| https://www.elastic.co/products/elasticsearch[Elasticsearch] | Search Engine        | 2.3.x
| http://vertx.io/[Vert.x]                                     | Core Framework       | 3.4.x
| https://hazelcast.com/[Hazelcast]                            | In-Memory Data Grid  | 3.5.x
| https://google.github.io/dagger/                             | Dependency Injection | 2.6.x
|======

== "Installation"

Good news: there is no dedicated installation procedure for Gentics Mesh! 

All you need is to http://getmesh.io/Download[download the Gentics Mesh JAR] file and start by executing 

[source,bash]
----
java -jar mesh-demo-X.X.X.jar
----

Gentics Mesh comes with OrientDB, an embedded graph database, and Elasticsearch. There are no external dependencies besides Oracle Java Runtime 1.8.0_40 or newer.

On first startup, Gentics Mesh will create initial data, set a password for the keystore file and provide the configuration files mesh.yml and mesh-ui-config.js:

 data
 keystore.jceks
 mesh-ui-config.js
 mesh.yml

== Docker

Alternatively you can start Gentics Mesh using Docker via:

The https://hub.docker.com/r/gentics/mesh-demo/[mesh-demo] image contains Gentics Mesh together with demo content and our demo application.

[source,bash]
----
docker run -p 8080:8080 gentics/mesh-demo
or
docker run -v /opt/data/:/mesh/data -p 8080:8080 gentics/mesh-demo
----

The https://hub.docker.com/r/gentics/mesh/[mesh] image contains an empty Gentics Mesh server without any demo content.

[source,bash]
----
docker run -p 8080:8080 gentics/mesh
or
docker run -v /opt/data/:/mesh/data -p 8080:8080 gentics/mesh
----


=== System Requirements

==== Server Requirements

Gentics Mesh comes with OrientDB, an embedded graph database and Elasticsearch. There are no external dependencies besides Oracle Java Runtime 1.8.0_40 or newer.

===== System Configuration

The max open file limit on Linux has to be raised on most Linux systems since the embedded graph database and Elasticsearch server often exceed the amount of concurrent open files.

Edit _/etc/security/limits.conf_ and add these two lines:

[source,bash]
----
Mesh   soft    nofile  60000
Mesh   hard    nofile  60000
----

Edit _/etc/pam.d/su_ and uncomment or add the following line:

[source,bash]
----
session    required   pam_limits.so
----

NOTE: This change may require a logout and login.

==== Client Requirements

The Gentics Mesh user interface has been designed mobile-first and does not impose any specific requirements other than enabled JavaScript. It can be used with any "modern" browser, i.e. IE11+ and latest versions of Chrome, Firefox, and Safari.

== Settings

All settings can be found in the main ```mesh.yml``` configuration file, that contains various settings for configuring HTTP & SSL, the graph database, and file upload.
The settings for the Gentics Mesh user interface can be found in ```mesh-ui-config.js```.

[source,json]
----
include::examples/models/mesh-config.yml[]
----

=== General Settings 
[options="header"]
|======
| Configuration            | Type   | Description
| ```clusterMode```        | Flag   | The internal hazelcast in-memory data grid will be enabled if this flag is set to true.
| ```updateCheck```        | Flag   | An update check to the Gentics Mesh update server will be invoked during startup if this flag is set to true.
| ```defaultPageSize```    | Number | Default page size.
| ```defaultLanguage```    | String | Default language which serves as a fallback when no language has been specified within a request.
| ```verticles```          | List   | List of vert.x java verticle classes which will be loaded during startup.
| ```tempDirectory```      | Path   | Path to the main temporary filesystem directory.
|======

=== HTTPS/SSL

To enable https you have to specify the server key and the server certificate within the configuration.

You can create a snakeoil certificate for testing purposes this way:

[source,bash]
----
openssl req -x509 -newkey rsa:2048 -keyout key.pem -out cert.pem -days 90 -nodes
----

=== Server Options

[options="header"]
|======
| Configuration                                     | Type      | Description
| ```httpServerOptions.port```                      | Number    | HTTP Port number.
| ```httpServerOptions.ssl```                       | Boolean   | Enable or disable SSL support.
| ```httpServerOptions.corsAllowedOriginPattern```  | RegEx     | Regex which will validate the origin CORS header.
| ```httpServerOptions.enableCors```                | Boolean   | Enable CORS support.
| ```httpServerOptions.certPath```                  | Path      | SSL certificate path.
| ```httpServerOptions.keyPath```                   | Path      | SSL key path.
|======

=== Storage Options

By default all specified directories are relative to the current working directory.

[options="header"]
|======
| Configuration                        | Type      | Description
| ```storageOptions.directory```       | Path      | Path to the graph database storage location.
| ```storageOptions.backupDirectory``` | Path      | Backup directory.
| ```storageOptions.exportDirectory``` | Path      | Export directory.
| ```storageOptions.startServer```     | Boolean   | Flag that indicates whether the graph database server component should be started. By default only an embedded graph database is used which does not start a graph server.
| ```storageOptions.parameters```      | JSON      | Additional JSON parameters that will be passed on to the used graph database implementation.
|======

=== Upload Options

[options="header"]
|======
| Configuration                       | Type   | Description
| ```uploadOptions.byteLimit```      | Number | Upload limit in bytes.
| ```uploadOptions.directory```      | Path   | Filesystem directory for uploaded binary data.
| ```uploadOptions.tempDirectory```  | Path   | Temporary directory for uploaded binary data. Finished files will be moved to the upload directory.
|======

=== Cache Options

Gentics Mesh does not manage any cache structure but it is possible to tweak the underlying graph and Elasticsearch database cache settings.

////////
== Backup
TODO
http://getmesh.io/docs/beta/raml/#admin
////////

== link:changelog.html[Changelog]

== License

* Gentics Mesh is published under the https://www.apache.org/licenses/LICENSE-2.0[Apache License, Version 2.0]   
* https://github.com/graphql/graphiql[GraphiQL] is owned and developed by Facebook Inc.